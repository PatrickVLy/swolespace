{"ast":null,"code":"var _jsxFileName = \"/Users/patrickly/Desktop/swolespace/client/src/pages/logworkout/LogWorkout.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./logWorkout.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LogWorkout() {\n  _s();\n\n  const [selected, setSelected] = React.useState(\"\");\n  /** Function that will set different values to state variable\n   * based on which dropdown is selected\n   */\n\n  const changeSelectOptionHandler = event => {\n    setSelected(event.target.value);\n  };\n  /** Different arrays for different dropdowns */\n\n\n  const algorithm = [\"Searching Algorithm\", \"Sorting Algorithm\", \"Graph Algorithm\"];\n  const language = [\"C++\", \"Java\", \"Python\", \"C#\"];\n  const dataStructure = [\"Arrays\", \"LinkedList\", \"Stack\", \"Queue\"];\n  /** Type variable to store different array for different dropdown */\n\n  let type = null;\n  /** This will be used to create set of options that user will see */\n\n  let options = null;\n  /** Setting Type variable according to dropdown */\n\n  if (selected === \"Algorithm\") {\n    type = algorithm;\n  } else if (selected === \"Language\") {\n    type = language;\n  } else if (selected === \"Data Structure\") {\n    type = dataStructure;\n  }\n  /** If \"Type\" is null or undefined then options will be null,\n   * otherwise it will create a options iterable based on our array\n   */\n\n\n  if (type) {\n    options = type.map(el => /*#__PURE__*/_jsxDEV(\"option\", {\n      children: el\n    }, el, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 32\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"logWorkout\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"./squat.jpg\",\n      alt: \"\",\n      className: \"logWorkoutImg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      className: \"logWorkoutForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logWorkoutFormGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fileInput\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"logWorkoutIcon fas fa-folder-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"fileInput\",\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name this workout\",\n          className: \"logWorkoutInput\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logWorkoutFormGroup\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: changeSelectOptionHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Choose...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Algorithm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Data Structure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logWorkoutFormGroup\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          children:\n          /** This is where we have used our options variable */\n          options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logWorkoutFormGroup\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"How was your workout today?\",\n          type: \"text\",\n          className: \"logWorkoutInput logWorkoutText\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logWorkoutSubmit\",\n        children: \"Log Workout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LogWorkout, \"5JZuWEbSK7gWtQNUHwm+D/HbW5U=\");\n\n_c = LogWorkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogWorkout\");","map":{"version":3,"sources":["/Users/patrickly/Desktop/swolespace/client/src/pages/logworkout/LogWorkout.jsx"],"names":["LogWorkout","selected","setSelected","React","useState","changeSelectOptionHandler","event","target","value","algorithm","language","dataStructure","type","options","map","el","display"],"mappings":"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","sourcesContent":["import \"./logWorkout.css\"\n\nexport default function LogWorkout() {\n    const [selected, setSelected] = React.useState(\"\");\n  \n  /** Function that will set different values to state variable\n   * based on which dropdown is selected\n   */\n  const changeSelectOptionHandler = (event) => {\n    setSelected(event.target.value);\n  };\n  \n  /** Different arrays for different dropdowns */\n  const algorithm = [\n    \"Searching Algorithm\",\n    \"Sorting Algorithm\",\n    \"Graph Algorithm\",\n  ];\n  const language = [\"C++\", \"Java\", \"Python\", \"C#\"];\n  const dataStructure = [\"Arrays\", \"LinkedList\", \"Stack\", \"Queue\"];\n  \n  /** Type variable to store different array for different dropdown */\n  let type = null;\n  \n  /** This will be used to create set of options that user will see */\n  let options = null;\n  \n  /** Setting Type variable according to dropdown */\n  if (selected === \"Algorithm\") {\n    type = algorithm;\n  } else if (selected === \"Language\") {\n    type = language;\n  } else if (selected === \"Data Structure\") {\n    type = dataStructure;\n  }\n  \n  /** If \"Type\" is null or undefined then options will be null,\n   * otherwise it will create a options iterable based on our array\n   */\n  if (type) {\n    options = type.map((el) => <option key={el}>{el}</option>);\n  }\n    return (\n        <div className=\"logWorkout\">\n            <img src=\"./squat.jpg\" alt=\"\" className=\"logWorkoutImg\"/>\n            <form action=\"\" className=\"logWorkoutForm\">\n                <div className=\"logWorkoutFormGroup\">\n                    <label htmlFor=\"fileInput\"><i className=\"logWorkoutIcon fas fa-folder-plus\"></i></label>\n                    <input type=\"file\" id=\"fileInput\" style={{display: \"none\"}}/>\n                    <input type=\"text\" placeholder=\"Name this workout\" className=\"logWorkoutInput\" autoFocus={true}/>\n                </div>\n                <div className=\"logWorkoutFormGroup\">\n          {/** Bind changeSelectOptionHandler to onChange method of select.\n           * This method will trigger every time different\n           * option is selected.\n           */}\n          <select onChange={changeSelectOptionHandler}>\n            <option>Choose...</option>\n            <option>Algorithm</option>\n            <option>Language</option>\n            <option>Data Structure</option>\n          </select>\n        </div>\n        <div className=\"logWorkoutFormGroup\">\n          <select>\n            {\n              /** This is where we have used our options variable */\n              options\n            }\n          </select>\n        </div>\n                <div className=\"logWorkoutFormGroup\">\n                    <textarea placeholder=\"How was your workout today?\" type=\"text\" className=\"logWorkoutInput logWorkoutText\"></textarea>\n                </div>\n\n                <button className=\"logWorkoutSubmit\">Log Workout</button>\n            </form>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}