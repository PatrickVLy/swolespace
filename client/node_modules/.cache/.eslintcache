[{"/Users/patrickly/Desktop/swolespace/client/src/index.js":"1","/Users/patrickly/Desktop/swolespace/client/src/App.js":"2","/Users/patrickly/Desktop/swolespace/client/src/components/topbar/TopBar.jsx":"3","/Users/patrickly/Desktop/swolespace/client/src/pages/home/Home.jsx":"4","/Users/patrickly/Desktop/swolespace/client/src/components/posts/Posts.jsx":"5","/Users/patrickly/Desktop/swolespace/client/src/pages/single/Single.jsx":"6","/Users/patrickly/Desktop/swolespace/client/src/pages/settings/Settings.jsx":"7","/Users/patrickly/Desktop/swolespace/client/src/pages/logworkout/LogWorkout.jsx":"8","/Users/patrickly/Desktop/swolespace/client/src/pages/login/LogIn.jsx":"9","/Users/patrickly/Desktop/swolespace/client/src/pages/signup/SignUp.jsx":"10","/Users/patrickly/Desktop/swolespace/client/src/components/header/Header.jsx":"11","/Users/patrickly/Desktop/swolespace/client/src/components/sidebar/SideBar.jsx":"12","/Users/patrickly/Desktop/swolespace/client/src/components/post/Post.jsx":"13","/Users/patrickly/Desktop/swolespace/client/src/components/singlePost/SinglePost.jsx":"14"},{"size":199,"mtime":1642734460477,"results":"15","hashOfConfig":"16"},{"size":1007,"mtime":1643490507971,"results":"17","hashOfConfig":"16"},{"size":1652,"mtime":1643490469324,"results":"18","hashOfConfig":"16"},{"size":787,"mtime":1643488174788,"results":"19","hashOfConfig":"16"},{"size":244,"mtime":1643346634211,"results":"20","hashOfConfig":"16"},{"size":295,"mtime":1642977602897,"results":"21","hashOfConfig":"16"},{"size":1436,"mtime":1642998849267,"results":"22","hashOfConfig":"16"},{"size":5935,"mtime":1643221963985,"results":"23","hashOfConfig":"16"},{"size":776,"mtime":1643053475946,"results":"24","hashOfConfig":"16"},{"size":1664,"mtime":1643490433981,"results":"25","hashOfConfig":"16"},{"size":373,"mtime":1642791762178,"results":"26","hashOfConfig":"16"},{"size":1804,"mtime":1643489404702,"results":"27","hashOfConfig":"16"},{"size":2242,"mtime":1643489024370,"results":"28","hashOfConfig":"16"},{"size":3742,"mtime":1643489092970,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"12ws7r7",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/patrickly/Desktop/swolespace/client/src/index.js",[],["63","64"],"/Users/patrickly/Desktop/swolespace/client/src/App.js",["65","66"],"import Home from \"./pages/home/Home\"\nimport TopBar from \"./components/topbar/TopBar\"\nimport Single from \"./pages/single/Single\"\nimport Posts from \"./components/posts/Posts\";\nimport LogWorkout from \"./pages/logworkout/LogWorkout\";\nimport Settings from \"./pages/settings/Settings\";\nimport LogIn from \"./pages/login/LogIn\";\nimport SignUp from \"./pages/signup/SignUp\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const user = false;\n  return (\n    <Router>\n      <TopBar/>\n      <Routes>\n      <Route path=\"/\" element={<Home/>}/>\n      <Route path=\"signup/*\" element={user ? <Home/> : <SignUp/>}/>\n      <Route path=\"login/*\" element={user ? <Home/> : <LogIn/>}/>\n      <Route path=\"logworkout/*\" element={user ? <LogWorkout/> : <SignUp/>}/>\n      <Route path=\"settings/*\" element={user ? <Settings/> : <SignUp/>}/>\n      <Route path=\"post/:postId\" element={<Single/>}/>\n      </Routes>\n    \n\n\n      \n      </Router>\n  );\n}\n\nexport default App;\n","/Users/patrickly/Desktop/swolespace/client/src/components/topbar/TopBar.jsx",[],["67","68"],"/Users/patrickly/Desktop/swolespace/client/src/pages/home/Home.jsx",["69"],"/Users/patrickly/Desktop/swolespace/client/src/components/posts/Posts.jsx",[],"/Users/patrickly/Desktop/swolespace/client/src/pages/single/Single.jsx",[],"/Users/patrickly/Desktop/swolespace/client/src/pages/settings/Settings.jsx",[],"/Users/patrickly/Desktop/swolespace/client/src/pages/logworkout/LogWorkout.jsx",["70"],"import \"./logWorkout.css\";\nimport * as React from \"react\";\n\nexport default function LogWorkout() {\n    const [selected, setSelected] = React.useState(\"\");\n  \n  /** Function that will set different values to state variable\n   * based on which dropdown is selected\n   */\n  const changeSelectOptionHandler = (event) => {\n    setSelected(event.target.value);\n  };\n  \n  /** Different arrays for different dropdowns */\n  const category = [\n    \"Total Body\",\n    \"Chest\",\n    \"Shoulders\",\n    \"Arms\",\n    \"Core\",\n    \"Legs\"\n  ];\n  const chest = [\"\", \"Bench Press\", \"Dumbell Bench Press\", \"Incline Bench Press\", \"Incline Dumbell Bench Press\", \"Decline Bench Press\", \"Chest Press Machine\", \"Incline Chest Press Machine\", \"Cable Fly\", \"Machine Fly\", \"Dips\"];\n  const back = [\"\",\"Lat Pulldown\", \"Seated Row\", \"Bent Over Row\", \"Cable Pullovers\", \"Pull-Ups\", \"Machine High Row\", \"Dumbbell Row\", \"Cable Pulldowns\"];\n  const shoulders = [\"\",\"Seated Overhead Press\", \"Standing Overhead Press\", \"Shoulder Press Machine\", \"Cable Shoulder Press\", \"Dumbell Lateral Raise\", \"Dumbell Front Raise\", \"Rear Delt Fly\"];\n  const arms = [\"\",\"Standing Dumbbell Curls\", \"Seated Dumbbell Curls\", \"Preacher Curls\", \"Cable Rope Pulldown\", \"Overhead Rope Extension\", \"Skullcrushers\", \"Dips\"];\n  const core = [\"\",\"Weighted Sit-up\", \"Hollow Body Rocks\", \"Russian Twists\", \"Plank\", \"Side Planks\", \"Kettlebell Windmill\"];\n  const legs = [\"\",\"Back Squats\", \"Leg Press\", \"Romanian Deadlifts\", \"Leg Extension\", \"Leg Curls\", \"Donkey Calf Raise\", \"Standing Calf Raise\", \"Seated Calf Raise\"];\n  const totalBody = chest.concat(back, shoulders, arms, core, legs);\n  \n  /** Type variable to store different array for different dropdown */\n  let type = null;\n  \n  /** This will be used to create set of options that user will see */\n  let options = null;\n  \n  /** Setting Type variable according to dropdown */\n  if (selected === \"Total Body\") {\n    type = totalBody;\n  } else if (selected === \"Chest\") {\n    type = chest;\n  } else if (selected === \"Back\") {\n    type = back;\n  } else if (selected === \"Shoulders\") {\n        type = shoulders;\n  } else if (selected === \"Arms\") {\n    type = arms;\n  } else if (selected === \"Core\") {\n    type = core;\n  } else if (selected === \"Legs\") {\n    type = legs;\n  } else if (selected === \"Total Body\") {\n    type = totalBody;\n  }\n  \n  /** If \"Type\" is null or undefined then options will be null,\n   * otherwise it will create a options iterable based on our array\n   */\n  if (type) {\n    options = type.map((el) => <option key={el}>{el}</option>);\n  }\n    return (\n        <div className=\"logWorkout\">\n            <img src=\"./squat.jpg\" alt=\"\" className=\"logWorkoutImg\"/>\n            <form action=\"\" className=\"logWorkoutForm\">\n                <div className=\"logWorkoutFormGroup\">\n                    <label htmlFor=\"fileInput\"><i className=\"logWorkoutIcon fas fa-folder-plus\"></i></label>\n                    <input type=\"file\" id=\"fileInput\" style={{display: \"none\"}}/>\n                    <input type=\"text\" placeholder=\"Name this workout\" className=\"logWorkoutInput\" autoFocus={true}/>\n                </div>\n        <div className=\"logWorkoutFormExercises\">\n          {/** Bind changeSelectOptionHandler to onChange method of select.\n           * This method will trigger every time different\n           * option is selected.\n           */}\n          <select onChange={changeSelectOptionHandler}>\n            <option>Choose...</option>\n            <option>Chest</option>\n            <option>Back</option>\n            <option>Shoulders</option>\n            <option>Arms</option>\n            <option>Core</option>\n            <option>Legs</option>\n            <option>Total Body</option>\n          </select>\n          </div>\n\n\n\n\n\n                <div className=\"logWorkoutFormRow\">\n                <select>\n                { options }\n                </select>\n                 <input placeholder=\"weight\"></input>\n                 <input placeholder=\"sets\"></input>\n                <input placeholder=\"reps\"></input>\n                </div>\n\n                <div className=\"logWorkoutFormRow\">\n                <select>\n                { options }\n                </select>\n                 <input placeholder=\"weight\"></input>\n                 <input placeholder=\"sets\"></input>\n                <input placeholder=\"reps\"></input>\n                </div>\n\n                <div className=\"logWorkoutFormRow\">\n                <select>\n                { options }\n                </select>\n                 <input placeholder=\"weight\"></input>\n                 <input placeholder=\"sets\"></input>\n                <input placeholder=\"reps\"></input>\n                </div>\n\n                <div className=\"logWorkoutFormRow\">\n                <select>\n                { options }\n                </select>\n                 <input placeholder=\"weight\"></input>\n                 <input placeholder=\"sets\"></input>\n                <input placeholder=\"reps\"></input>\n                </div>\n\n                <div className=\"logWorkoutFormRow\">\n                <select>\n                { options }\n                </select>\n                 <input placeholder=\"weight\"></input>\n                 <input placeholder=\"sets\"></input>\n                <input placeholder=\"reps\"></input>\n                </div>\n\n                <div className=\"logWorkoutFormRow\">\n                <select>\n                { options }\n                </select>\n                 <input placeholder=\"weight\"></input>\n                 <input placeholder=\"sets\"></input>\n                <input placeholder=\"reps\"></input>\n                </div>\n\n\n\n                <div className=\"logWorkoutFormGroup\">\n                    <textarea placeholder=\"How was your workout today?\" type=\"text\" className=\"logWorkoutInput logWorkoutText\"></textarea>\n                </div>\n\n                <button className=\"logWorkoutSubmit\">Log Workout</button>\n            </form>\n        </div>\n    )\n}\n","/Users/patrickly/Desktop/swolespace/client/src/pages/login/LogIn.jsx",[],"/Users/patrickly/Desktop/swolespace/client/src/pages/signup/SignUp.jsx",[],"/Users/patrickly/Desktop/swolespace/client/src/components/header/Header.jsx",["71"],"import \"./header.css\"\n\n\nexport default function Header() {\n    return (\n        <div className=\"header\">\n          {/* <div className=\"headerTitles\">\n              <span className=\"headerTitleSm\">SWOLE</span>\n              <span className=\"headerTitleLg\">SPACE</span>\n\n          </div> */}\n          <img className=\"headerImage\" src=\"./header.png\"/>\n        </div>\n    )\n}\n","/Users/patrickly/Desktop/swolespace/client/src/components/sidebar/SideBar.jsx",[],"/Users/patrickly/Desktop/swolespace/client/src/components/post/Post.jsx",[],"/Users/patrickly/Desktop/swolespace/client/src/components/singlePost/SinglePost.jsx",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":4,"column":8,"nodeType":"78","messageId":"79","endLine":4,"endColumn":13},{"ruleId":"76","severity":1,"message":"80","line":13,"column":3,"nodeType":"78","messageId":"79","endLine":13,"endColumn":7},{"ruleId":"72","replacedBy":"81"},{"ruleId":"74","replacedBy":"82"},{"ruleId":"76","severity":1,"message":"83","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":14},{"ruleId":"76","severity":1,"message":"84","line":15,"column":9,"nodeType":"78","messageId":"79","endLine":15,"endColumn":17},{"ruleId":"85","severity":1,"message":"86","line":12,"column":11,"nodeType":"87","endLine":12,"endColumn":60},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'Posts' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.",["88"],["89"],"'Header' is defined but never used.","'category' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]